# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

name: Azure Pipelines

variables:
  python.version: '3.7.6'
  terraform.version: '0.13.4'

stages:
- stage: Infrastructure Provisioning
  displayName: Infrastructure Provisioning
  jobs:
    - job: ProvisioningAppService
      displayName: Provisioning AppService
      steps:
        - task: InstallSSHKey@0
          inputs:
            knownHostsEntry: 'default'
            sshKeySecureFile: 'id_rsa'
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: 'ls /home/vsts/work/_temp/'
        - task: TerraformInstaller@0
          inputs:
            terraformVersion: '0.13.4'
        - task: TerraformTaskV1@0
          displayName: Terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: 'Azure subscription 1(f8815ca1-2653-4eca-b987-4de651bf2b5c)'
            backendAzureRmResourceGroupName: 'myudacityensureqltyrelc03-rg'
            backendAzureRmStorageAccountName: 'udacityensureqltyrelc03'
            backendAzureRmContainerName: 'udacityensureqltyrelc03'
            backendAzureRmKey: 'rctCztMN6blqXWbc/ZpamqhDybc0Lh6Ua2Ip04LvZAYgZaynA5vUpjNsyPxAPU5fLKW5wCl9ZBrJfIaalINbxQ=='
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'


